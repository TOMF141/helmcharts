# Default values for template chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Global Settings --
nameOverride: ""
fullnameOverride: ""

# Custom labels and annotations applied to all resources created by this chart.
commonLabels: {} # app.kubernetes.io/part-of: my-app-suite
commonAnnotations: {} # mycompany.com/contact-person: "John Doe"

# -- Workload Configuration --

# Top-level choice for the primary workload type.
# Valid values: "deployment", "statefulset", "daemonset"
workloadType: deployment

# General Pod settings (apply to all workload types unless overridden)
replicaCount: 1 # Used if workloadType is deployment and autoscaling is disabled

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []

# Override the default command and args for the main container
command: []
# - "/bin/sh"
# - "-c"
# - "while true; do echo hello; sleep 10;done"

args: []
# - "--option1=value1"
# - "--option2"

# Container lifecycle hooks
# Ref: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/
lifecycle: {}
  # postStart:
  #   exec:
  #     command: ["/bin/sh", "-c", "echo Hello from postStart handler > /usr/share/message"]
  # preStop:
  #   exec:
  #     command: ["/bin/sh","-c","nginx -s quit; while killall -0 nginx; do sleep 1; done"]

# Container resource requests and limits
# Ref: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# Define the ports the container exposes
containerPorts:
- name: http # Name for the port (referenced by probes, services, etc.)
  containerPort: 80 # Port number the container listens on
  protocol: TCP # TCP, UDP, SCTP
#  - name: metrics
#    containerPort: 9090
#    protocol: TCP

# Liveness probe configuration
# Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-a-liveness-command
livenessProbe:
  enabled: false
  # httpGet:
  #   path: /healthz
  #   port: http # Reference port name from containerPorts
  # initialDelaySeconds: 30
  # periodSeconds: 10
  # timeoutSeconds: 5
  # failureThreshold: 3
  # successThreshold: 1
  # tcpSocket:
  #   port: http # Reference port name from containerPorts
  # exec:
  #   command:
  #   - cat
  #   - /tmp/healthy

# Readiness probe configuration
# Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes
readinessProbe:
  enabled: false
  # httpGet:
  #   path: /ready
  #   port: http # Reference port name from containerPorts
  # initialDelaySeconds: 5
  # periodSeconds: 5
  # timeoutSeconds: 3
  # failureThreshold: 3
  # successThreshold: 1
  # tcpSocket:
  #   port: http # Reference port name from containerPorts
  # exec:
  #   command:
  #   - cat
  #   - /tmp/ready

# Startup probe configuration
# Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-startup-probes
startupProbe:
  enabled: false
  # httpGet:
  #   path: /startup
  #   port: http # Reference port name from containerPorts
  # initialDelaySeconds: 10
  # periodSeconds: 5
  # failureThreshold: 30 # Allows for longer startup times

# Environment variables passed directly to the main container.
# Ref: https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/
env: {}
  # TZ: Europe/London
  # PUID: "1000" # Note: Env vars are strings
  # PGID: "1000"
  # MY_VAR: "my-value"

# Environment variables sourced from ConfigMaps or Secrets.
# Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#configure-all-key-value-pairs-in-a-configmap-as-container-environment-variables
envFrom: []
# Example: Sourcing from a Secret potentially created by this chart
# - secretRef:
#     name: {{ include "template.fullname" . }}-secrets
# Example: Sourcing from a pre-existing Secret
# - secretRef:
#     name: my-existing-app-secrets
# Example: Sourcing from a pre-existing ConfigMap
# - configMapRef:
#     name: my-existing-app-config

# -- Pod Configuration --

podAnnotations: {}
podLabels: {}

# Pod DNS policy. Defaults to "ClusterFirst". Valid values are "ClusterFirstWithHostNet", "ClusterFirst", "Default", "None".
# Ref: https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy
dnsPolicy: "" # Defaults to ClusterFirst if not set

# How long the pod needs to terminate gracefully.
# Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#pod-termination
terminationGracePeriodSeconds: 30

# Init containers
# Ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
initContainers: {}
#   init-myservice:
#     image: busybox:1.28
#     command: ['sh', '-c', 'until nslookup myservice; do echo waiting for myservice; sleep 2; done;']
#   init-mydb:
#     image: busybox:1.28
#     command: ['sh', '-c', 'until nslookup mydb; do echo waiting for mydb; sleep 2; done;']
#   # Example with security context and volume mounts
#   init-config:
#     image: alpine:latest
#     command: ['sh', '-c', 'cp /config-template/* /config-target/']
#     volumeMounts:
#       - name: config-template-vol
#         mountPath: /config-template
#       - name: config-target-vol
#         mountPath: /config-target
#     securityContext:
#       runAsUser: 1001
#       readOnlyRootFilesystem: true

# -- Security Configuration --

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# Pod-level security context. Applied to all containers in the pod.
# Ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
podSecurityContext: {}
  # fsGroup: 2000
  # runAsUser: 1001
  # runAsGroup: 3000
  # fsGroupChangePolicy: "OnRootMismatch"
  # supplementalGroups: [ 4000 ]
  # sysctls:
  # - name: kernel.shm_rmid_forced
  #   value: "1"

# Container-level security context. Applied to the main application container.
# Ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
  # allowPrivilegeEscalation: false
  # privileged: false
  # seLinuxOptions:
  #   level: "s0:c123,c456"
  # seccompProfile:
  #   type: RuntimeDefault # Or Localhost

# -- Secret Configuration --
# Configuration for creating Kubernetes Secrets directly from values.
secrets:
  # -- Enable creation of a Secret resource based on the 'data' below.
  enabled: false
  # -- Provide the name of an existing Secret to use instead of creating one. If set, 'enabled' and 'data' are ignored for creation.
  # existingSecret: ""
  # -- Annotations to add to the Secret resource.
  annotations: {}
  # -- Data key-value pairs for the Secret. Values will be base64 encoded.
  data: {}
  # Example:
  # MY_API_KEY: "supersecretkey"
  # DB_PASSWORD: "password123"

# -- ConfigMap Configuration --
# Configuration for creating Kubernetes ConfigMaps directly from values.
configmap:
  # -- Enable creation of a ConfigMap resource based on the 'data' below.
  enabled: false
  # -- Provide the name of an existing ConfigMap to use instead of creating one. If set, 'enabled' and 'data' are ignored for creation.
  # existingConfigMap: ""
  # -- Annotations to add to the ConfigMap resource.
  annotations: {}
  # -- Data key-value pairs for the ConfigMap. Values are stored as strings.
  data: {}
  # Example:
  # config.properties: |
  #   key1=value1
  #   key2=value2
  # another-setting: "some string value"

# -- Networking Configuration --

# Define a list of Services to create.
services:
  # - name: primary # A name for this specific service (used in resource naming)
  #   enabled: true # Set to false to disable this specific Service
  #   type: ClusterIP # Service Type (ClusterIP, NodePort, LoadBalancer)
  #   # loadBalancerClass: "your-lb-class" # Optional: Specify LoadBalancer class (only relevant for type: LoadBalancer)
  #   ports:
  #   - name: http # Name for the service port
  #     port: 80 # The port the service listens on
  #     targetPort: http # The target port name or number in the container (references containerPorts)
  #     protocol: TCP # Protocol (TCP, UDP, SCTP)
  #     # nodePort: 30080 # Required if type is NodePort and you want a static port
  #   annotations: {}
  #   labels: {}
  # - name: internal-metrics
  #   enabled: true
  #   type: ClusterIP
  #   ports:
  #   - name: metrics
  #     port: 9090
  #     targetPort: metrics
  #     protocol: TCP
  #   annotations:
  #     prometheus.io/scrape: "true"
  #     prometheus.io/port: "9090"

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
  - host: chart-example.local
    paths:
    - path: /
      pathType: ImplementationSpecific
      backend:
        service:
          # Specify the target service and port
          name: "" # Name of the service generated from the 'services' list (e.g., {{ include "template.fullname" . }}-primary)
          port:
            name: "" # Name of the port in the target service (e.g., http)
            # number: 80 # Or specify by number
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

gatewayApi:
  enabled: false
  # Gateway API resources (HTTPRoute, Gateway, etc.)
  httpRoute:
    enabled: true
    name: "" # Defaults to fullname
    annotations: {}
    labels: {}
    hostnames:
    - chart-example.local
    parentRefs:
    # Define parent Gateways or other resources
    - name: default-gateway # Example: reference a Gateway named 'default-gateway'
      # namespace: gateway-infra # Optional: if the Gateway is in a different namespace
    rules:
    - matches:
      # Define traffic matching criteria
      - path:
          type: PathPrefix
          value: /
      # filters: # Optional: define request/response modification filters
      #   - type: RequestHeaderModifier
      #     requestHeaderModifier:
      #       add:
      #         - name: my-added-header
      #           value: "my-value"
      backendRefs:
      # Define backend services
      - name: "" # Name of the service generated from the 'services' list (e.g., {{ include "template.fullname" . }}-primary)
        port: 80 # Port number of the target service
        # weight: 1 # Optional: for traffic splitting

        
# -- Workload Specific Configurations --

# Deployment specific configurations (only used if workloadType is "deployment")
deployment:
  # Deployment Strategy
  # Ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
  strategy:
    type: RollingUpdate # Recreate or RollingUpdate
    # rollingUpdate:
    #   maxUnavailable: 25%
    #   maxSurge: 25%

# StatefulSet specific configurations (only used if workloadType is "statefulset")
statefulset:
  replicaCount: 1 # StatefulSets typically manage stable replicas
  podManagementPolicy: OrderedReady # Or Parallel
  # StatefulSet Update Strategy
  # Ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  updateStrategy:
    type: RollingUpdate # Or OnDelete
    # rollingUpdate:
    #   partition: 0 # For RollingUpdate strategy
    # Defines the PVCs that will be created and managed by the StatefulSet controller
  volumeClaimTemplates: []
  # - metadata:
  #     name: www
  #   spec:
  #     accessModes: [ "ReadWriteOnce" ]
  #     storageClassName: "my-storage-class"
  #     resources:
  #       requests:
  #         storage: 1Gi

# DaemonSet specific configurations (only used if workloadType is "daemonset")
daemonset:
  updateStrategy:
    type: RollingUpdate # Or OnDelete
    # rollingUpdate:
    #   maxUnavailable: 1
    # Tolerations specific to the DaemonSet pods
  tolerations: []
  # Affinity rules specific to the DaemonSet pods
  affinity: {}

# -- Autoscaling --

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# -- Storage Configuration --
# Additional volumes defined directly in the pod spec (e.g., configMap, secret, emptyDir).
# These are added alongside any volumes from persistence.claims or statefulset.volumeClaimTemplates.
volumes: []
# - name: config-volume
#   configMap:
#     name: {{ include "template.fullname" . }}-config
# - name: secret-volume
#   secret:
#     secretName: mysecret
#     optional: false
# - name: shared-data
#   emptyDir: {}

# Additional volumeMounts for the main container.
# These are added alongside any volumeMounts from persistence.claims.
volumeMounts: []
# - name: config-volume
#   mountPath: "/etc/config"
#   readOnly: true
# - name: secret-volume
#   mountPath: "/etc/secret"
#   readOnly: true
# - name: shared-data
#   mountPath: /tmp/shared

# Persistence configuration using independent PVCs
# Allows defining PersistentVolumeClaims independently. Useful for Deployments or adding extra PVCs to StatefulSets/DaemonSets.
# Ref: https://kubernetes.io/docs/concepts/storage/persistent-volumes/#persistentvolumeclaims
persistence:
  enabled: false
  # List of PVCs to create
  claims: []
  # - name: data # Name of the PVC, used for volume name and claim name suffix
  #   mountPath: /data # Where to mount the volume in the container
  #   # subPath: "" # Optional: Mount a sub-path of the volume
  #   # readOnly: false # Optional: Mount read-only
  #   # --- PVC Spec ---
  #   # storageClassName: "standard" # Optional: Specify StorageClass
  #   accessModes:
  #     - ReadWriteOnce
  #   size: 1Gi # Size of the PVC
  #   # annotations: {} # Optional: Add annotations to the PVC
  #   # labels: {} # Optional: Add labels to the PVC

# -- Scheduling Configuration --
nodeSelector: {}

tolerations: []

affinity: {}
