{{- $name := include "huntarr.fullname" . -}}
{{- $servicePort := .Values.service.port -}}

Huntarr has been deployed.

{{- if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ $name }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo "Access Huntarr web UI at: http://$NODE_IP:$NODE_PORT"
{{- else if contains "LoadBalancer" .Values.service.type }}
  NOTE: It may take a few minutes for the LoadBalancer IP to be available.
        You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ $name }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ $name }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo "Access Huntarr web UI at: http://$SERVICE_IP:{{ $servicePort }}"
{{- else if contains "ClusterIP" .Values.service.type }}
  Get the Huntarr URL by running these commands:
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "huntarr.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:{{ $servicePort }}
{{- end }}

**IMPORTANT:**
*   Configuration Method:
    *   **Option 1 (values.yaml):** Ensure `config.apiKey` and `config.apiUrl` are set in `values.yaml`. You can optionally use `secretName` just for the API key.
    *   **Option 2 (Existing Secret):** Set `configSecretName` in `values.yaml` to the name of a secret containing all required environment variables (e.g., `API_KEY`, `API_URL`). If `configSecretName` is set, the `config` map and `secretName` in `values.yaml` are ignored.
*   Persistence: Ensure the persistent volume for `/config` is correctly set up if `persistence.config.enabled` is true.
