{{- if .Values.ui.enabled }}
apiVersion: {{ include "autopulse.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ include "autopulse.fullname" . }}-ui
  labels:
    {{- include "autopulse.labels" . | nindent 4 }}
    app.kubernetes.io/component: ui
spec:
  replicas: {{ .Values.ui.replicaCount }}
  selector:
    matchLabels:
      {{- include "autopulse.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: ui
  template:
    metadata:
      labels:
        {{- include "autopulse.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: ui
        {{- with .Values.podLabels }} # Reuse main app podLabels if needed, or add specific ui.podLabels
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.podAnnotations }} # Reuse main app podAnnotations if needed, or add specific ui.podAnnotations
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }} # Reuse main app imagePullSecrets
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      # Service account might not be needed for UI, but can reuse if necessary
      # serviceAccountName: {{ include "autopulse.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }} # Reuse main app podSecurityContext
      containers:
        - name: {{ .Chart.Name }}-ui
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }} # Reuse main app securityContext
          image: "{{ .Values.ui.image.repository }}:{{ .Values.ui.image.tag }}"
          imagePullPolicy: {{ .Values.ui.image.pullPolicy }}
          ports:
            - name: http-ui
              containerPort: {{ .Values.ui.service.port }}
              protocol: TCP
          env:
            {{- range $key, $value := .Values.ui.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          resources: {} # Define specific resources for UI if needed, otherwise inherits none
          # Add probes if UI has health endpoints
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http-ui
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http-ui
      # Reuse nodeSelector, affinity, tolerations if needed
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
