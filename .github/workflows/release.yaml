name: Release Charts

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'charts/**'
      - '.github/workflows/release.yaml'
      - 'README.md'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GH_ACTOR"
          git config user.email "$GH_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: 'latest'

      - name: Add Helm repos
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm repo update

      - name: Debug - List charts
        run: |
          echo "Listing charts in the charts directory:"
          ls -la charts/
          for chart in charts/*; do
            if [ -d "$chart" ]; then
              echo "Chart: $chart"
              cat "$chart/Chart.yaml"
              echo "---"
            fi
          done

      - name: Package charts manually
        run: |
          mkdir -p .cr-release-packages
          for chart in charts/*; do
            if [ -d "$chart" ]; then
              echo "Packaging chart: $chart"
              helm package "$chart" -d .cr-release-packages/
            fi
          done
          ls -la .cr-release-packages/

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.5.0
        env:
          CR_TOKEN: "${{ secrets.GH_TOKEN }}"
        with:
          charts_dir: charts
          config: .github/cr-config.yaml

      - name: Debug - Check index.yaml
        run: |
          echo "Checking for index.yaml in .cr-index directory:"
          ls -la .cr-index/ || echo ".cr-index directory not found"
          if [ -f ".cr-index/index.yaml" ]; then
            echo "Content of index.yaml:"
            cat .cr-index/index.yaml
          else
            echo "index.yaml not found in .cr-index directory"
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install markdown-to-html converter
        run: npm install -g markdown-it

      - name: Checkout gh-pages branch
        uses: actions/checkout@v3
        with:
          ref: gh-pages
          path: gh-pages
          token: "${{ secrets.GH_TOKEN }}"
          
      - name: Debug - Check gh-pages content
        run: |
          echo "Checking content of gh-pages directory:"
          ls -la gh-pages/
          if [ -f "gh-pages/index.yaml" ]; then
            echo "Content of index.yaml in gh-pages:"
            cat gh-pages/index.yaml
          else
            echo "index.yaml not found in gh-pages directory"
          fi

      - name: Create index.html from README
        run: |
          # Convert README.md to index.html
          markdown-it README.md > index.html
          
          # Add HTML header and styling
          sed -i '1i<!DOCTYPE html>\n<html>\n<head>\n<meta charset="UTF-8">\n<meta name="viewport" content="width=device-width, initial-scale=1">\n<title>TF141 Helm Charts</title>\n<style>\nbody { font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif; line-height: 1.6; padding: 20px; max-width: 1000px; margin: 0 auto; color: #24292e; }\ncode { background-color: rgba(27,31,35,.05); border-radius: 3px; font-family: "SFMono-Regular", Consolas, "Liberation Mono", Menlo, monospace; font-size: 85%; margin: 0; padding: .2em .4em; }\npre { background-color: #f6f8fa; border-radius: 3px; font-family: "SFMono-Regular", Consolas, "Liberation Mono", Menlo, monospace; font-size: 85%; line-height: 1.45; overflow: auto; padding: 16px; }\npre code { background-color: transparent; padding: 0; }\ntable { border-collapse: collapse; width: 100%; }\ntable th, table td { border: 1px solid #dfe2e5; padding: 6px 13px; }\ntable tr { background-color: #fff; border-top: 1px solid #c6cbd1; }\ntable tr:nth-child(2n) { background-color: #f6f8fa; }\na { color: #0366d6; text-decoration: none; }\na:hover { text-decoration: underline; }\nh1, h2, h3, h4, h5, h6 { margin-top: 24px; margin-bottom: 16px; font-weight: 600; line-height: 1.25; }\nh1 { font-size: 2em; margin: .67em 0; padding-bottom: .3em; border-bottom: 1px solid #eaecef; }\nh2 { padding-bottom: .3em; font-size: 1.5em; border-bottom: 1px solid #eaecef; }\nh3 { font-size: 1.25em; }\nh4 { font-size: 1em; }\nh5 { font-size: .875em; }\nh6 { font-size: .85em; color: #6a737d; }\n</style>\n</head>\n<body>\n' index.html
          echo "</body>\n</html>" >> index.html
          
          # Add a link to the Helm repository
          sed -i 's|<h1>Helm Charts Collection</h1>|<h1>TF141 Helm Charts Collection</h1>\n<p><strong>Helm Repository URL:</strong> <code>https://tomf141.github.io/helmcharts/</code></p>\n<p>Add this repository to Helm: <code>helm repo add tf141 https://tomf141.github.io/helmcharts/</code></p>|' index.html
          
          # Move the index.html to gh-pages directory
          mv index.html gh-pages/

      - name: Copy packaged charts and index to gh-pages
        run: |
          # Copy packaged charts to gh-pages directory
          if [ -d ".cr-release-packages" ]; then
            cp -r .cr-release-packages/* gh-pages/ || echo "No packages to copy"
          fi
          
          # Copy index.yaml to gh-pages directory
          if [ -f ".cr-index/index.yaml" ]; then
            cp .cr-index/index.yaml gh-pages/
            echo "Copied index.yaml to gh-pages directory"
          else
            echo "WARNING: index.yaml not found in .cr-index directory"
            # Create a basic index.yaml if it doesn't exist
            if [ ! -f "gh-pages/index.yaml" ]; then
              echo "Creating basic index.yaml in gh-pages directory"
              echo "apiVersion: v1" > gh-pages/index.yaml
              echo "entries: {}" >> gh-pages/index.yaml
              echo "generated: $(date -u +"%Y-%m-%dT%H:%M:%SZ")" >> gh-pages/index.yaml
            fi
          fi

      - name: Commit and push gh-pages changes
        run: |
          git config user.name "GithubActions"
          git config user.email "GithubActions@users.noreply.github.com"
          cd gh-pages
          git add .
          git commit -m "Update GitHub Pages with charts and documentation" || echo "No changes to commit"
          git push

      - name: Debug - Final check
        run: |
          echo "Workflow completed. Check the gh-pages branch for the published charts."
          echo "To add the repository: helm repo add tf141 https://tomf141.github.io/helmcharts/"
          echo "To search for charts: helm search repo tf141"
