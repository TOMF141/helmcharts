apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "sonarr.fullname" . }}
  labels:
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/name: sonarr
    {{- include "sonarr.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/name: sonarr
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/name: sonarr
        {{- include "sonarr.labels" . | nindent 8 }}
    spec:
      hostname: {{ .Values.hostname | quote }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}

      containers:
      - name: sonarr
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: UMASK
          value: {{ .Values.env.UMASK | quote }}
        ports:
        - containerPort: 8989
          protocol: TCP
        resources:
          limits:
            memory: {{ .Values.resources.limits.memory }}
          requests:
            cpu: {{ .Values.resources.requests.cpu }}
            memory: {{ .Values.resources.requests.memory }}
        {{- if .Values.livenessProbe.enabled }}
        livenessProbe:
          exec:
            command:
            - /usr/bin/env
            - bash
            - -c
            - {{ .Values.livenessProbe.command | quote }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
        {{- end }}
        volumeMounts:
        - name: sonarr-config
          mountPath: /config
        - name: sonarr-xml
          mountPath: /tmp/config-xml
          readOnly: true
        {{- if and .Values.nfs.enabled .Values.nfs.server .Values.nfs.path }}
        - name: plexmedia-nfs
          mountPath: /zpool/plexmedia
        {{- end }}
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/sh
              - -c
              - |
                # Copy our generated or existing config.xml from secret to /config
                cp /tmp/config-xml/config.xml /config/config.xml

      volumes:
      - name: sonarr-config
        persistentVolumeClaim:
          claimName: {{- if .Values.persistence.config.existingClaim -}}
          {{ .Values.persistence.config.existingClaim }}
          {{- else -}}
          {{ include "sonarr.fullname" . }}-config
          {{- end }}

      - name: sonarr-xml
        secret:
          secretName: {{- if .Values.configXml.existingSecret -}}
            {{ .Values.configXml.existingSecret }}
          {{- else -}}
            {{ include "sonarr.fullname" . }}-xml
          {{- end }}

      {{- if and .Values.nfs.enabled .Values.nfs.server .Values.nfs.path }}
      - name: plexmedia-nfs
        nfs:
          server: {{ .Values.nfs.server }}
          path: {{ .Values.nfs.path }}
      {{- end }}

      restartPolicy: Always
