apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "qbittorrent.fullname" . }}
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/name: qbittorrent
    {{- include "qbittorrent.labels" . | nindent 4 }}
spec:
  progressDeadlineSeconds: 600
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      io.kompose.service: qbittorrent
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/name: qbittorrent
        {{- include "qbittorrent.labels" . | nindent 8 }}
    spec:
      hostname: {{ .Values.hostname | quote }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}

      containers:
      - name: qbittorrent
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: UMASK
          value: {{ .Values.env.UMASK | quote }}
        - name: DOCKER_MODS
          value: {{ .Values.env.DOCKER_MODS | quote }}
        - name: TP_THEME
          value: {{ .Values.env.TP_THEME | quote }}
        ports:
        - containerPort: 8080
          protocol: TCP
        resources:
          limits:
            cpu: {{ .Values.resources.limits.cpu | quote }}
            memory: {{ .Values.resources.limits.memory }}
          requests:
            cpu: {{ .Values.resources.requests.cpu | quote }}
            memory: {{ .Values.resources.requests.memory }}
        {{- if .Values.livenessProbe.enabled }}
        livenessProbe:
          exec:
            command:
            - /usr/bin/env
            - bash
            - -c
            - {{ .Values.livenessProbe.command | quote }}
          failureThreshold: 3
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          successThreshold: 1
          timeoutSeconds: 1
        {{- end }}
        volumeMounts:
        - name: qbittorrent-config
          mountPath: /config
        {{- if and .Values.nfs.enabled .Values.nfs.server .Values.nfs.path }}
        - name: plexmedia-nfs
          mountPath: /zpool/plexmedia
        {{- end }}
        - name: download-temp
          mountPath: /download-temp

      volumes:
      - name: qbittorrent-config
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.config.existingClaim }}
      - name: download-temp
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.download.existingClaim }}
      {{- if and .Values.nfs.enabled .Values.nfs.server .Values.nfs.path }}
      - name: plexmedia-nfs
        nfs:
          server: {{ .Values.nfs.server }}
          path: {{ .Values.nfs.path }}
      {{- end }}

      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
