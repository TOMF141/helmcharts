apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "autoscan.fullname" . }}
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/name: autoscan
    {{- include "autoscan.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/name: autoscan
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/name: autoscan
        {{- include "autoscan.labels" . | nindent 8 }}
    spec:
      # Node scheduling
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}

      containers:
      - name: autoscan
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: 3030
          protocol: TCP
        resources:
          limits:
            cpu: {{ .Values.resources.limits.cpu }}
            memory: {{ .Values.resources.limits.memory }}
          requests:
            cpu: {{ .Values.resources.requests.cpu }}
            memory: {{ .Values.resources.requests.memory }}
        lifecycle:
          postStart:
            exec:
              command:
                - /bin/sh
                - -c
                - |
                  # Copy the config from /tmp/config to /config
                  cp /tmp/config/config.yml /config/config.yml

                  # If we have a mounted plex-token file, do the placeholder replacement
                  if [ -f /tmp/plex-token/{{ .Values.config.targets.plex.tokenSecret.key }} ]; then
                    token=$(cat /tmp/plex-token/{{ .Values.config.targets.plex.tokenSecret.key }});
                    sed -i "s/PLEX_TOKEN_PLACEHOLDER/${token}/g" /config/config.yml;
                  fi
        volumeMounts:
        - name: autoscan-config
          mountPath: /tmp/config
        - name: autoscan-conf
          mountPath: /config
        - name: autoscan-database
          mountPath: /data
        {{- if .Values.config.targets.plex.useTokenSecret }}
        - name: plex-token
          mountPath: /tmp/plex-token
          readOnly: true
        {{- end }}

      volumes:
      - name: autoscan-config
        secret:
          secretName:{{- if .Values.config.existingSecret }} {{ .Values.config.existingSecret }}{{- else }} {{ include "autoscan.fullname" . }}-config{{- end }}

      - name: autoscan-conf
        persistentVolumeClaim:
          claimName:{{- if .Values.persistence.conf.existingClaim }} {{ .Values.persistence.conf.existingClaim }}{{- else }} {{ include "autoscan.fullname" . }}-conf{{- end }}

      - name: autoscan-database
        persistentVolumeClaim:
          claimName:{{- if .Values.persistence.database.existingClaim }} {{ .Values.persistence.database.existingClaim }}{{- else }} {{ include "autoscan.fullname" . }}-database{{- end }}

      {{- if .Values.config.targets.plex.useTokenSecret }}
      - name: plex-token
        secret:
          secretName: {{ .Values.config.targets.plex.tokenSecret.name }}
          items:
          - key: {{ .Values.config.targets.plex.tokenSecret.key }}
            path: {{ .Values.config.targets.plex.tokenSecret.key }}
      {{- end }}

      restartPolicy: Always
