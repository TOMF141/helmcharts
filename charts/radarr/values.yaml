# Default values for radarr.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Override the name of the chart.
nameOverride: ""
# -- Override the full name of the chart.
fullnameOverride: ""

# ------------------------------------------------------------------------------
# Image configuration
# ------------------------------------------------------------------------------
image:
  repository: lscr.io/linuxserver/radarr
  tag: latest
  pullPolicy: IfNotPresent

# -- Optional list of image pull secrets.
imagePullSecrets: []
# -- Optional extra labels to add to all resources.
extraLabels: {}

# ------------------------------------------------------------------------------
# Number of replicas
# ------------------------------------------------------------------------------
replicaCount: 1

# -- Deployment strategy.
strategy:
  type: RollingUpdate # Default strategy
  rollingUpdate:
    maxSurge: "25%"
    maxUnavailable: "25%"

# ------------------------------------------------------------------------------
# Service Account
# ------------------------------------------------------------------------------
serviceAccount:
  # -- Specifies whether a service account should be created.
  create: true
  # -- The name of the service account to use. If not set and create is true, a name is generated using the fullname template.
  name: ""
  # -- Annotations to add to the service account.
  annotations: {}

# -- Annotations to add to the pod.
podAnnotations: {}
# -- Labels to add to the pod.
podLabels: {} # Add any specific pod labels here if needed
# -- Annotations to add to the deployment.
deploymentAnnotations: {}

# -- Security context for the pod.
# See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
podSecurityContext: {}
  # fsGroup: 1000
  # runAsUser: 1000
  # runAsGroup: 1000
  # runAsNonRoot: true

# -- Optional init containers for the pod.
# See https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
initContainers: []

# -- Optional extra volume mounts for the main container.
# Example:
# extraVolumeMounts:
#   - name: my-config-volume
#     mountPath: /opt/scripts/my-script.sh
#     subPath: my-script.sh
#     readOnly: true
extraVolumeMounts: []

# -- Optional extra volumes for the pod.
# Example:
# extraVolumes:
#   - name: my-config-volume
#     configMap:
#       name: my-radarr-configmap
#       defaultMode: 0755
extraVolumes: []

# -- Security context for the container.
# See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
containerSecurityContext: {}
  # allowPrivilegeEscalation: false
  # capabilities:
  #   drop:
  #     - ALL
  # readOnlyRootFilesystem: true
  # runAsUser: 1000
  # runAsGroup: 1000
  # runAsNonRoot: true

# ------------------------------------------------------------------------------
# Service config
# ------------------------------------------------------------------------------
service:
  # -- Kubernetes service type.
  type: ClusterIP
  # -- Service port.
  port: 7878
  # -- Service target port. Defaults to the service port.
  targetPort: 7878
  # -- Node port (only used if type is NodePort).
  nodePort: null
  # -- Annotations for the service.
  annotations: {}
  # -- Labels for the service.
  labels: {}

# ------------------------------------------------------------------------------
# Ingress config
# ------------------------------------------------------------------------------
ingress:
  # -- Enable ingress controller resource.
  enabled: false
  # -- Ingress class name.
  className: ""
  # -- Annotations for the ingress.
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host configuration.
  hosts:
  - host: radarr.local # Placeholder: Change this
    paths:
    - path: /
      pathType: ImplementationSpecific
  # -- Ingress TLS configuration.
  tls: []
  #  - secretName: radarr-tls
  #    hosts:
  #      - radarr.local

  # ------------------------------------------------------------------------------
  # Resource requests & limits
  # ------------------------------------------------------------------------------
resources:
  limits:
    memory: 4Gi
  requests:
    cpu: 50m
    memory: 1Gi

# ------------------------------------------------------------------------------
# Liveness probe
# ------------------------------------------------------------------------------
livenessProbe:
  enabled: true
  # type: exec # Defaulting to exec based on command below
  initialDelaySeconds: 30
  periodSeconds: 60
  timeoutSeconds: 10 # Increased timeout for API check
  failureThreshold: 3 # Added default
  command: | # Specific command for Radarr API check
    curl --fail localhost:7878/api/v3/system/status?apiKey=`IFS=\> && while read -d \< E C; do if [[ $E = "ApiKey" ]]; then echo $C; fi; done < /config/config.xml`

# -- Readiness probe configuration. Disabled by default.
# See https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
readinessProbe:
  enabled: false
  # type: httpGet
  # path: /
  # port: http
  # initialDelaySeconds: 15
  # periodSeconds: 15
  # timeoutSeconds: 5
  # failureThreshold: 3

  # ------------------------------------------------------------------------------
  # Persistence
  # ------------------------------------------------------------------------------
persistence:
  config:
    # -- Enable persistence for config volume.
    enabled: true
    # -- Type of volume. Options: pvc, hostPath, emptyDir, nfs, iscsi.
    type: pvc
    # -- Mount path inside the container.
    mountPath: /config
    # -- Access modes for the PVC.
    accessModes:
    - ReadWriteOnce
    # -- Size of the PVC.
    size: 1Gi
    # -- Storage class for the PVC. If "", uses default.
    storageClass: ""
    # -- Use an existing PVC instead of creating one.
    existingClaim: ""

# ------------------------------------------------------------------------------
# NFS volume for media
# ------------------------------------------------------------------------------
nfs:
  enabled: true
  server: "10.3.200.151"
  path: "/mnt/zpool/plexmedia"
  # -- Mount path inside the container for the NFS volume.
  mountPath: /mnt/nfs/media # Example mount path

# ------------------------------------------------------------------------------
# Node scheduling
# ------------------------------------------------------------------------------
nodeSelector: {}
tolerations: []
affinity: {}

# ------------------------------------------------------------------------------
# Hostname override
# ------------------------------------------------------------------------------
hostname: radarr

# ------------------------------------------------------------------------------
# Environment variables
# ------------------------------------------------------------------------------
env:
  # TZ: Europe/London # Example: Set Timezone
  # PUID: 1000 # Example: Set User ID
  # PGID: 1000 # Example: Set Group ID
  UMASK: "000"

# -- Environment variables sourced from ConfigMaps or Secrets.
envFrom: []
# - secretRef:
#     name: my-secret
# - configMapRef:
#     name: my-configmap

# ------------------------------------------------------------------------------
# ConfigMap for Radarr configuration (config.xml)
# ------------------------------------------------------------------------------
secretConfig:
  # -- Enable creation of a Secret for config.xml.
  enabled: true
  # -- Name of an existing Secret to use for config.xml. If set, 'enabled' is ignored and no new secret is created.
  existingSecretName: ""
  # -- Data for the config.xml file. This will be stored in a Secret.
  # Ensure this is properly XML formatted and relevant for Radarr.
  # Example structure:
  # data:
  #   config.xml: |
  #     <Config>
  #       <ApiKey>YOUR_API_KEY_HERE</ApiKey>
  #       <LogLevel>Info</LogLevel>
  #       <Port>7878</Port>
  #       <SslPort>9898</SslPort>
  #       <EnableSsl>False</EnableSsl>
  #       <LaunchBrowser>True</LaunchBrowser>
  #       <Branch>main</Branch>
  #       <AuthenticationMethod>None</AuthenticationMethod>
  #       <AnalyticsEnabled>True</AnalyticsEnabled>
  #       <UrlBase></UrlBase>
  #       <BindAddress>*</BindAddress>
  #       <SslCertPath></SslCertPath>
  #       <SslCertPassword></SslCertPassword>
  #       <ProxyEnabled>False</ProxyEnabled>
  #       <ProxyType>Http</ProxyType>
  #       <ProxyHostname></ProxyHostname>
  #       <ProxyPort></ProxyPort>
  #       <ProxyUsername></ProxyUsername>
  #       <ProxyPassword></ProxyPassword>
  #       <ProxyBypassFilter></ProxyBypassFilter>
  #       <ProxyBypassLocalAddresses>False</ProxyBypassLocalAddresses>
  #       <UpdateMechanism>Docker</UpdateMechanism>
  #       <UpdateAutomatically>True</UpdateAutomatically>
  #       <UpdateScriptPath></UpdateScriptPath>
  #     </Config>
  data: {}
    # config.xml: | 
    #   <Config>
    #     <ApiKey>xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</ApiKey>
    #     <LogLevel>info</LogLevel>
    #     <Port>7878</Port>
    #     <BindAddress>*</BindAddress>
    #     <SslPort>9898</SslPort>
    #     <EnableSsl>False</EnableSsl>
    #     <LaunchBrowser>True</LaunchBrowser>
    #     <Branch>main</Branch>
    #     <AuthenticationMethod>None</AuthenticationMethod>
    #     <UpdateMechanism>Docker</UpdateMechanism>
    #   </Config>

# -- Autoscaling configuration
# See https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
