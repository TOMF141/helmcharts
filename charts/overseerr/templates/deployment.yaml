apiVersion: {{ include "overseerr.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ include "overseerr.fullname" . }}
  namespace: {{ .Release.Namespace }} # Use Release.Namespace for standard Helm behavior
  labels:
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/name: {{ include "overseerr.name" . }}
    {{- include "overseerr.labels" . | nindent 4 }}
  {{- with .Values.deploymentAnnotations }}
  annotations:
{{ toYaml . | indent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/name: {{ include "overseerr.name" . }}
  strategy:
{{ toYaml .Values.strategy | indent 4 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
{{ toYaml . | indent 8 }}
    {{- end }}
      labels:
        # Add standard selector labels for matching service selector
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/name: {{ include "overseerr.name" . }}
        # Include the common labels from _helpers.tpl
        {{- include "overseerr.labels" . | nindent 8 }}
        # Add any extra pod labels defined in values
        {{- with .Values.podLabels }}
{{ toYaml . | indent 8 }}
        {{- end }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml . | indent 8 }}
    {{- end }}
      serviceAccountName: {{ include "overseerr.serviceAccountName" . }}
    {{- with .Values.podSecurityContext }}
      securityContext:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- if .Values.hostname }}
      hostname: {{ .Values.hostname }}
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}
        {{- with .Values.containerSecurityContext }}
          securityContext:
{{ toYaml . | indent 12 }}
        {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: {{ .Values.service.name | default "http" }}
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- with .Values.env }}
          env:
            {{- range $key, $value := . }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          {{- end }}
        {{- with .Values.envFrom }}
          envFrom:
{{ toYaml . | indent 12 }}
        {{- end }}
        {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            {{- if eq .Values.livenessProbe.type "httpGet" }}
            httpGet:
              path: {{ .Values.livenessProbe.path }}
              port: {{ .Values.service.name | default "http" }}
            {{- else if eq .Values.livenessProbe.type "tcpSocket" }}
            tcpSocket:
              port: {{ .Values.service.name | default "http" }}
            {{- else if eq .Values.livenessProbe.type "exec" }}
            exec:
              command:
{{ toYaml .Values.livenessProbe.command | indent 16 }}
            {{- end }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
        {{- end }}
        {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            {{- if eq .Values.readinessProbe.type "httpGet" }}
            httpGet:
              path: {{ .Values.readinessProbe.path }}
              port: {{ .Values.service.name | default "http" }}
            {{- else if eq .Values.readinessProbe.type "tcpSocket" }}
            tcpSocket:
              port: {{ .Values.service.name | default "http" }}
            {{- else if eq .Values.readinessProbe.type "exec" }}
            exec:
              command:
{{ toYaml .Values.readinessProbe.command | indent 16 }}
            {{- end }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
        {{- end }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          volumeMounts:
          {{- range $key, $value := .Values.persistence }}
          {{- if $value.enabled }}
            - name: {{ $key }}
              mountPath: {{ $value.mountPath }}
              {{- if $value.subPath }}
              subPath: {{ $value.subPath }}
              {{- end }}
              {{- if $value.readOnly }}
              readOnly: {{ $value.readOnly }}
              {{- end }}
          {{- end }}
          {{- end }}
      volumes:
      {{- range $key, $value := .Values.persistence }}
      {{- if $value.enabled }}
        - name: {{ $key }}
        {{- if eq $value.type "pvc" }}
          persistentVolumeClaim:
            claimName: {{ $value.existingClaim | default (printf "%s-%s" (include "overseerr.fullname" $) $key) }} # Pass top-level context $
          {{- else if eq $value.type "hostPath" }}
          hostPath:
            path: {{ $value.path }}
            type: {{ $value.hostPathType | default "DirectoryOrCreate" }}
        {{- else if eq $value.type "emptyDir" }}
          emptyDir:
          {{- if $value.medium }}
            medium: {{ $value.medium }}
          {{- end }}
          {{- if $value.sizeLimit }}
            sizeLimit: {{ $value.sizeLimit }}
          {{- end }}
        {{- else if eq $value.type "nfs" }}
          nfs:
            server: {{ $value.server }}
            path: {{ $value.path }}
            readOnly: {{ $value.readOnly | default false }}
        {{- else if eq $value.type "iscsi" }}
          iscsi:
            targetPortal: {{ $value.targetPortal }}
            {{- if $value.portals }}
            portals: {{ $value.portals | toJson }} # Added portals support
            {{- end }}
            iqn: {{ $value.iqn }}
            lun: {{ $value.lun }}
            fsType: {{ $value.fsType | default "ext4" }}
            readOnly: {{ $value.readOnly | default false }}
            {{- if $value.secretRef }}
            secretRef:
              name: {{ $value.secretRef }}
            {{- end }}
            # chapAuthSession: false # Removed, typically handled by secretRef if needed
        {{- end }}
      {{- end }}
      {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
